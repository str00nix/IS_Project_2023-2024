@model MusicStoreApplication.Web.Models.AlbumIndexViewModel

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script>
    var showFilter = false;

    function toggleShowFilter() { 
        showFilter = !showFilter;
        let filterButton = document.getElementById("showFilterButton");
        let filters = document.getElementById("filters");
        if (showFilter) {
            filterButton.innerHTML = "Hide Filters <i class='fa-solid fa-chevron-up'></i>";
            filters.hidden = false;
        }
        else 
        {
            filterButton.innerHTML = "Show Filters <i class='fa-solid fa-chevron-down'></i>";
            filters.hidden = true;
        }
    }

    function SwitchViewGrid() { 
        let gridView = document.getElementById("gridView");
        gridView.hidden = false;
        let listView = document.getElementById("listView");
        listView.hidden = true;

        let gridViewBtn = document.getElementById("gridViewBtn");
        gridViewBtn.checked = true;
        let listViewBtn = document.getElementById("listViewBtn");
        listViewBtn.checked = false;
    }

    function SwitchViewList() { 
        let gridView = document.getElementById("gridView");
        gridView.hidden = true;
        let listView = document.getElementById("listView");
        listView.hidden = false;

        let gridViewBtn = document.getElementById("gridViewBtn");
        gridViewBtn.checked = false;
        let listViewBtn = document.getElementById("listViewBtn");
        listViewBtn.checked = true;
    }
</script>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-decoration-underline">Albums</h1>

<form id="searchForm" class="container">
    <div class="row form-group">
        <div class="col col-lg-9 col-md-8 col-sm-7 p-0">
            <input class="form-control rounded-0" name="searchString" id="searchInput"
                type="search" placeholder="Search..." aria-label="Search" />
        </div>
        <div class="col col-lg-3 col-md-4 col-sm-5 p-0">
            <button onclick="toggleShowFilter()" class="btn btn-secondary btn-block w-100 rounded-0" type="button" id="showFilterButton">
                Show Filters
                <i class="fa-solid fa-chevron-down"></i>
            </button>
        </div>
    </div>

    <div id="filters" hidden>
        <div class="row mt-2">
            <div class="col-6">
                <div class="form-group row ps-2">
                    <label for="genreSelection" class="col-form-label col-2">Genres:</label>
                    <div class="form-group col">
                        <select id="genreSelect" name="genreSelect" class="selectpicker" multiple data-live-search="true">
                            @foreach(var genre in Model.Genres)
                            {
                            <option value="@genre.Id">
                                @genre.Name
                            </option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group row ps-2">
                    <label for="artistSelection" class="col-form-label col-2">Artists:</label>
                    <div class="form-group col">
                        <select id="artistSelect" name="artistSelect" class="selectpicker" multiple data-live-search="true">
                            @foreach(var artist in Model.Artists)
                            {
                            <option value="@artist.Name">
                                @artist.Name
                            </option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-0 mt-2">

        <div class="col btn-group btn-group-toggle m-2" data-toggle="buttons">
          <input name="gridView" id="gridViewBtn" type="checkbox" class="btn-check active"/>
          <label for="gridView" onclick="SwitchViewGrid()" class="btn btn-secondary" for="btn-check">
              <i class="fa-solid fa-table"></i>
          </label>
          <input name="listView" id="listViewBtn" type="checkbox" class="btn-check active"/>
          <label for="listView" onclick="SwitchViewList()" class="btn btn-secondary" for="btn-check">
              <i class="fa-solid fa-list"></i>
          </label>
        </div>
        <div class="col-auto">
        </div>
        <div class="col-lg-2 col-md-3 col-sm-4 p-0">
            <div class="row">
                <label for="pageSize" class="col-form-label col-auto">PageSize:</label>
                <div class="form-group col">
                    <select class="form-control w-100" name="pageSize" id="pageSizeSelect">
                        <option>20</option>
                        <option>50</option>
                        <option>100</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-4 col-sm-5 p-0">
            <button class="btn btn-dark btn-block w-100 rounded-0" type="submit">
                Search <i class="fas fa-search"></i>
            </button>
        </div>
    </div>

</form>

<div id="gridView" class="container mt-5">
    <div class="row">
        @foreach (var album in Model.Albums.Items)
        {
            <div class="col-lg-2 col-md-3 mb-4">
                <div class="card h-100">
                <img src="~/images/record-clipart.png" class="card-img-top p-2" /> 
                    <div class="p-2 card-title d-flex justify-content-between align-items-end">
                        <h5 class="card-title">@album.Name</h5>
                        <div class="dropdown">
                            <button class="btn" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <svg width="12" height="14" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                                    <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                                </svg>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" asp-action="Details" asp-route-id="@album.Id">Details</a></li>
                                <li><hr class="dropdown-divider border-top border-secondary"></li>
                                <li><a class="dropdown-item text-warning" asp-action="Edit" asp-route-id="@album.Id">Edit</a></li>
                                <li><a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@album.Id">Delete</a></li>
                            </ul>
                        </div>
                    </div>                
                    <div class="card-subtitle p-2 d-flex-inline">
                        <h6 class="text-muted pe-1">
                            @(String.Join(", ", album.Tracks.SelectMany(t => t.Artists.Select(at => at.Artist.Name)).ToHashSet()) + " | ")
                            @(String.Join(", ", album.Tracks.SelectMany(t => t.Genres.Select(gt => gt.Genre.Name)).ToHashSet()))
                        </h6>

                        @{
                            var totalTime = album.Tracks.Count() > 0 ? album
                                .Tracks
                                .Select(t => t != null ? (t.DurationInMilliseconds != null ? t.DurationInMilliseconds : 0.0) : 0.0)
                                .Aggregate((x, y) => x + y) : 0;

                            TimeSpan t = TimeSpan.FromMilliseconds((double)totalTime);
                        }
                        <div class="mask w-100 flex-grow-1 align-items-end justify-content-end ">
                            <h6 class="text-muted p-1">
                                @String.Format("{0:D2}:{1:D2}", t.Minutes, t.Seconds)
                            </h6>
                        </div>
                        <div></div>
                    </div>
                </div>
            </div>
        }
        <div class="col-lg-2 col-md-3 col-sm-4 mb-4 d-flex align-items-stretch">
            <div class="d-flex align-items-center justify-content-center container">
                <div class="p-4 d-flex justify-content-center align-items-end">
                    <a asp-action="Create">
                    <button type="button" class="btn btn-success ps-5 pe-5 pt-5 pb-5 rounded-circle btn-lg d-flex align-items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2" />
                        </svg>
                    </button>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<table id="listView" class="table" hidden>
 <thead>
     <tr>
         <th>Name</th>
         <th>Artists</th>
         <th>Genre</th>
         <th>Duration</th>
     </tr>
 </thead>
 <tbody>
    @foreach (var album in Model.Albums.Items)
    {
        <tr>
            <td>@album.Name</td>
            <td>@(String.Join(", ", album.Tracks.SelectMany(t => t.Artists.Select(at => at.Artist.Name)).ToHashSet()))</td>
            <td>@(String.Join(", ", album.Tracks.SelectMany(t => t.Genres.Select(gt => gt.Genre.Name)).ToHashSet()))</td>
            @{
                    var totalTime = album.Tracks.Count() > 0 ? album
                    .Tracks
                    .Select(t => t != null ? (t.DurationInMilliseconds != null ? t.DurationInMilliseconds : 0.0) : 0.0)
                    .Aggregate((x, y) => x + y) : 0;

                    TimeSpan t = TimeSpan.FromMilliseconds((double)totalTime);
            }
            <td>@String.Format("{0:D2}:{1:D2}", t.Minutes, t.Seconds)</td>
            <td>
                <a asp-action="Edit" asp-route-id="@album.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@album.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@album.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<nav aria-label="Page navigation example" class="d-flex justify-content-center">
  <ul class="pagination">
    @if (Model.Albums.Page > 1)
    {
        <li class="page-item"><a class="page-link" href="?&page=@(Model.Albums.Page - 1)">Previous</a></li>
    }
    @{
        var start = Model.Albums.Page < 5 ? 1 : Model.Albums.Page - 4;
        var end = Model.Albums.TotalPages - Model.Albums.Page < 5 ? Model.Albums.TotalPages : Model.Albums.Page + 4;
    }
    @for (int i = start; i < end; i++)
    {
            @if (i == Model.Albums.Page)
            {
                <li class="page-item active"><a class="page-link" href="?&page=@i">@i</a></li>
            }
            else
            {
                <li class="page-item"><a class="page-link" href="?&page=@i">@i</a></li>
            }
    }
    @if (Model.Albums.Page < Model.Albums.TotalPages)
    {
        <li class="page-item"><a class="page-link" href="?&page=@(Model.Albums.Page + 1)">Next</a></li>
    }
  </ul>
</nav>

<script>
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);

    const searchString = urlParams.get('searchString')
    document.getElementById("searchInput").value = searchString;

    const pageSize = urlParams.get('pageSize')
    document.getElementById("pageSizeSelect").value = pageSize;

    const genreSelect = urlParams.getAll('genreSelect');
    const optionsGenre = document.getElementById("genreSelect").getElementsByTagName("option");
    for (let i = 0; i < optionsGenre.length; i++) { 
        if (genreSelect.includes(optionsGenre[i].value)) { 
            optionsGenre[i].selected = true;
        }
    }

    const artistSelect = urlParams.getAll('artistSelect');
    const optionsArtists = document.getElementById("artistSelect").getElementsByTagName("option");
    for (let i = 0; i < optionsArtists.length; i++) { 
        if (artistSelect.includes(optionsArtists[i].value)) { 
            optionsArtists[i].selected = true;
        }
    }

    if (genreSelect.length != 0 || artistSelect.length != 0 ) { 
        if (!showFilter) { 
            toggleShowFilter();
        }
    }

    const listView = urlParams.get('listView')
    if (listView == "on") {
        SwitchViewList();
    }
</script>
