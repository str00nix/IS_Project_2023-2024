@model MusicStoreApplication.Web.Models.AddTrackToPlaylistViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Playlist</h4>
<hr />

<div class="row">
    <div class="col-md-5 col-lg-4 col-sm-8">
        <form asp-action="AddTrackToPlaylist">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row ps-2">
                <label asp-for="@Model.AddTrackToPlaylistDto.PlaylistID" class="col-form-label col-3">Playlist:</label>
                <div class="form-group col">
                    <select asp-for="@Model.AddTrackToPlaylistDto.PlaylistID" id="genreSelect" class="selectpicker" data-live-search="true">
                        @foreach(var playlist in Model.Playlists)
                        {
                        <option value="@playlist.Id">
                            @playlist.Name
                        </option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group" hidden>
                <label asp-for="@Model.AddTrackToPlaylistDto.TrackID" class="col-form-label col-3">Genres:</label>
                <div class="form-group col">
                    <input asp-for="@Model.AddTrackToPlaylistDto.TrackID" id="trackInput" class="form-control" value="@Model.Track.Id"/>
                </div>
            </div>
            <div class="form-group row">
                <input type="submit" value="Add Track to Playlist" class="btn btn-primary w-100 rounded-0" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Tracks" asp-action="Index">Back to Tracks</a>
    <a asp-controller="Tracks" asp-action="Details" asp-route-id="@Model.Track.Id">Back to Track Details</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
